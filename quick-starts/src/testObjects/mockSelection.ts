import { Selection } from 'd3'

export const mockSelection: Selection<SVGGElement, unknown, HTMLElement, any> =
  {
    select: jest.fn().mockImplementation((d) => d),
    selectAll: jest.fn().mockImplementation((d) => d),
    filter: jest.fn().mockImplementation((d) => d),
    merge: jest.fn().mockImplementation((d) => d),
    selectChild: jest.fn().mockImplementation((d) => d),
    selectChildren: jest.fn().mockImplementation((d) => d),
    selection: jest.fn().mockImplementation((d) => d),
    attr: jest.fn().mockImplementation((d) => d),
    classed: jest.fn().mockImplementation((d) => d),
    style: jest.fn().mockImplementation((d) => d),
    property: jest.fn().mockImplementation((d) => d),
    text: jest.fn().mockImplementation((d) => d),
    html: jest.fn().mockImplementation((d) => d),
    append: jest.fn().mockImplementation((d) => d),
    insert: jest.fn().mockImplementation((d) => d),
    remove: jest.fn().mockImplementation((d) => d),
    clone: jest.fn().mockImplementation((d) => d),
    sort: jest.fn().mockImplementation((d) => d),
    order: jest.fn().mockImplementation((d) => d),
    raise: jest.fn().mockImplementation((d) => d),
    lower: jest.fn().mockImplementation((d) => d),
    data: jest.fn().mockImplementation((d) => d),
    join: jest.fn().mockImplementation((d) => d),
    enter: jest.fn().mockImplementation((d) => d),
    exit: jest.fn().mockImplementation((d) => d),
    datum: jest.fn().mockImplementation((d) => d),
    on: jest.fn().mockImplementation((d) => d),
    dispatch: jest.fn().mockImplementation((d) => d),
    each: jest.fn().mockImplementation((d) => d),
    call: jest.fn().mockImplementation((d) => d),
    empty: jest.fn().mockImplementation((d) => d),
    nodes: jest.fn().mockImplementation((d) => d),
    node: jest.fn().mockImplementation((d) => d),
    size: jest.fn().mockImplementation((d) => d),
    interrupt: jest.fn().mockImplementation((d) => d),
    transition: jest.fn().mockImplementation((d) => d),
    [Symbol.iterator]: jest.fn().mockImplementation((d) => d),
  }
